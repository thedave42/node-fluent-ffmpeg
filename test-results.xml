<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="0.086" tests="203" failures="17">
  <testsuite name="Root Suite" timestamp="2025-06-07T21:52:42" tests="0" time="0.000" failures="0">
  </testsuite>
  <testsuite name="Method aliases" timestamp="2025-06-07T21:52:42" tests="0" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="audio methods" timestamp="2025-06-07T21:52:42" tests="0" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="FfmpegCommand#withNoAudio" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.003" failures="0">
    <testcase name="Method aliases audio methods FfmpegCommand#withNoAudio should have a &apos;noAudio&apos; alias" time="0.001" classname="should have a &apos;noAudio&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#withAudioCodec" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases audio methods FfmpegCommand#withAudioCodec should have a &apos;audioCodec&apos; alias" time="0.000" classname="should have a &apos;audioCodec&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#withAudioBitrate" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases audio methods FfmpegCommand#withAudioBitrate should have a &apos;audioBitrate&apos; alias" time="0.000" classname="should have a &apos;audioBitrate&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#withAudioChannels" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases audio methods FfmpegCommand#withAudioChannels should have a &apos;audioChannels&apos; alias" time="0.000" classname="should have a &apos;audioChannels&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#withAudioFrequency" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases audio methods FfmpegCommand#withAudioFrequency should have a &apos;audioFrequency&apos; alias" time="0.000" classname="should have a &apos;audioFrequency&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#withAudioQuality" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases audio methods FfmpegCommand#withAudioQuality should have a &apos;audioQuality&apos; alias" time="0.000" classname="should have a &apos;audioQuality&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#withAudioFilter" timestamp="2025-06-07T21:52:42" tests="3" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases audio methods FfmpegCommand#withAudioFilter should have a &apos;withAudioFilters&apos; alias" time="0.000" classname="should have a &apos;withAudioFilters&apos; alias">
    </testcase>
    <testcase name="Method aliases audio methods FfmpegCommand#withAudioFilter should have a &apos;audioFilter&apos; alias" time="0.000" classname="should have a &apos;audioFilter&apos; alias">
    </testcase>
    <testcase name="Method aliases audio methods FfmpegCommand#withAudioFilter should have a &apos;audioFilters&apos; alias" time="0.000" classname="should have a &apos;audioFilters&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="custom methods" timestamp="2025-06-07T21:52:42" tests="0" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="FfmpegCommand#addInputOption" timestamp="2025-06-07T21:52:42" tests="5" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases custom methods FfmpegCommand#addInputOption should have a &apos;addInputOptions&apos; alias" time="0.000" classname="should have a &apos;addInputOptions&apos; alias">
    </testcase>
    <testcase name="Method aliases custom methods FfmpegCommand#addInputOption should have a &apos;withInputOption&apos; alias" time="0.000" classname="should have a &apos;withInputOption&apos; alias">
    </testcase>
    <testcase name="Method aliases custom methods FfmpegCommand#addInputOption should have a &apos;withInputOptions&apos; alias" time="0.000" classname="should have a &apos;withInputOptions&apos; alias">
    </testcase>
    <testcase name="Method aliases custom methods FfmpegCommand#addInputOption should have a &apos;inputOption&apos; alias" time="0.000" classname="should have a &apos;inputOption&apos; alias">
    </testcase>
    <testcase name="Method aliases custom methods FfmpegCommand#addInputOption should have a &apos;inputOptions&apos; alias" time="0.000" classname="should have a &apos;inputOptions&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#addOutputOption" timestamp="2025-06-07T21:52:42" tests="9" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.001" failures="0">
    <testcase name="Method aliases custom methods FfmpegCommand#addOutputOption should have a &apos;addOutputOptions&apos; alias" time="0.000" classname="should have a &apos;addOutputOptions&apos; alias">
    </testcase>
    <testcase name="Method aliases custom methods FfmpegCommand#addOutputOption should have a &apos;addOption&apos; alias" time="0.001" classname="should have a &apos;addOption&apos; alias">
    </testcase>
    <testcase name="Method aliases custom methods FfmpegCommand#addOutputOption should have a &apos;addOptions&apos; alias" time="0.000" classname="should have a &apos;addOptions&apos; alias">
    </testcase>
    <testcase name="Method aliases custom methods FfmpegCommand#addOutputOption should have a &apos;withOutputOption&apos; alias" time="0.000" classname="should have a &apos;withOutputOption&apos; alias">
    </testcase>
    <testcase name="Method aliases custom methods FfmpegCommand#addOutputOption should have a &apos;withOutputOptions&apos; alias" time="0.000" classname="should have a &apos;withOutputOptions&apos; alias">
    </testcase>
    <testcase name="Method aliases custom methods FfmpegCommand#addOutputOption should have a &apos;withOption&apos; alias" time="0.000" classname="should have a &apos;withOption&apos; alias">
    </testcase>
    <testcase name="Method aliases custom methods FfmpegCommand#addOutputOption should have a &apos;withOptions&apos; alias" time="0.000" classname="should have a &apos;withOptions&apos; alias">
    </testcase>
    <testcase name="Method aliases custom methods FfmpegCommand#addOutputOption should have a &apos;outputOption&apos; alias" time="0.000" classname="should have a &apos;outputOption&apos; alias">
    </testcase>
    <testcase name="Method aliases custom methods FfmpegCommand#addOutputOption should have a &apos;outputOptions&apos; alias" time="0.000" classname="should have a &apos;outputOptions&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#complexFilter" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases custom methods FfmpegCommand#complexFilter should have a &apos;filterGraph&apos; alias" time="0.000" classname="should have a &apos;filterGraph&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="inputs methods" timestamp="2025-06-07T21:52:42" tests="0" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="FfmpegCommand#addInput" timestamp="2025-06-07T21:52:42" tests="2" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases inputs methods FfmpegCommand#addInput should have a &apos;input&apos; alias" time="0.000" classname="should have a &apos;input&apos; alias">
    </testcase>
    <testcase name="Method aliases inputs methods FfmpegCommand#addInput should have a &apos;mergeAdd&apos; alias" time="0.000" classname="should have a &apos;mergeAdd&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#fromFormat" timestamp="2025-06-07T21:52:42" tests="2" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases inputs methods FfmpegCommand#fromFormat should have a &apos;withInputFormat&apos; alias" time="0.000" classname="should have a &apos;withInputFormat&apos; alias">
    </testcase>
    <testcase name="Method aliases inputs methods FfmpegCommand#fromFormat should have a &apos;inputFormat&apos; alias" time="0.000" classname="should have a &apos;inputFormat&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#withInputFps" timestamp="2025-06-07T21:52:42" tests="7" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases inputs methods FfmpegCommand#withInputFps should have a &apos;withInputFPS&apos; alias" time="0.000" classname="should have a &apos;withInputFPS&apos; alias">
    </testcase>
    <testcase name="Method aliases inputs methods FfmpegCommand#withInputFps should have a &apos;withFpsInput&apos; alias" time="0.000" classname="should have a &apos;withFpsInput&apos; alias">
    </testcase>
    <testcase name="Method aliases inputs methods FfmpegCommand#withInputFps should have a &apos;withFPSInput&apos; alias" time="0.000" classname="should have a &apos;withFPSInput&apos; alias">
    </testcase>
    <testcase name="Method aliases inputs methods FfmpegCommand#withInputFps should have a &apos;inputFPS&apos; alias" time="0.000" classname="should have a &apos;inputFPS&apos; alias">
    </testcase>
    <testcase name="Method aliases inputs methods FfmpegCommand#withInputFps should have a &apos;inputFps&apos; alias" time="0.000" classname="should have a &apos;inputFps&apos; alias">
    </testcase>
    <testcase name="Method aliases inputs methods FfmpegCommand#withInputFps should have a &apos;fpsInput&apos; alias" time="0.000" classname="should have a &apos;fpsInput&apos; alias">
    </testcase>
    <testcase name="Method aliases inputs methods FfmpegCommand#withInputFps should have a &apos;FPSInput&apos; alias" time="0.000" classname="should have a &apos;FPSInput&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#native" timestamp="2025-06-07T21:52:42" tests="2" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.001" failures="0">
    <testcase name="Method aliases inputs methods FfmpegCommand#native should have a &apos;withNativeFramerate&apos; alias" time="0.000" classname="should have a &apos;withNativeFramerate&apos; alias">
    </testcase>
    <testcase name="Method aliases inputs methods FfmpegCommand#native should have a &apos;nativeFramerate&apos; alias" time="0.000" classname="should have a &apos;nativeFramerate&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#setStartTime" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases inputs methods FfmpegCommand#setStartTime should have a &apos;seekInput&apos; alias" time="0.000" classname="should have a &apos;seekInput&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="misc methods" timestamp="2025-06-07T21:52:42" tests="0" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="FfmpegCommand#usingPreset" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases misc methods FfmpegCommand#usingPreset should have a &apos;preset&apos; alias" time="0.000" classname="should have a &apos;preset&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="output methods" timestamp="2025-06-07T21:52:42" tests="0" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="FfmpegCommand#addOutput" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases output methods FfmpegCommand#addOutput should have a &apos;output&apos; alias" time="0.000" classname="should have a &apos;output&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#withDuration" timestamp="2025-06-07T21:52:42" tests="2" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases output methods FfmpegCommand#withDuration should have a &apos;duration&apos; alias" time="0.000" classname="should have a &apos;duration&apos; alias">
    </testcase>
    <testcase name="Method aliases output methods FfmpegCommand#withDuration should have a &apos;setDuration&apos; alias" time="0.000" classname="should have a &apos;setDuration&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#toFormat" timestamp="2025-06-07T21:52:42" tests="3" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases output methods FfmpegCommand#toFormat should have a &apos;withOutputFormat&apos; alias" time="0.000" classname="should have a &apos;withOutputFormat&apos; alias">
    </testcase>
    <testcase name="Method aliases output methods FfmpegCommand#toFormat should have a &apos;outputFormat&apos; alias" time="0.000" classname="should have a &apos;outputFormat&apos; alias">
    </testcase>
    <testcase name="Method aliases output methods FfmpegCommand#toFormat should have a &apos;format&apos; alias" time="0.000" classname="should have a &apos;format&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#seek" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases output methods FfmpegCommand#seek should have a &apos;seekOutput&apos; alias" time="0.000" classname="should have a &apos;seekOutput&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#updateFlvMetadata" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases output methods FfmpegCommand#updateFlvMetadata should have a &apos;flvmeta&apos; alias" time="0.000" classname="should have a &apos;flvmeta&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="video methods" timestamp="2025-06-07T21:52:42" tests="0" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="FfmpegCommand#withNoVideo" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases video methods FfmpegCommand#withNoVideo should have a &apos;noVideo&apos; alias" time="0.000" classname="should have a &apos;noVideo&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#withVideoCodec" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases video methods FfmpegCommand#withVideoCodec should have a &apos;videoCodec&apos; alias" time="0.000" classname="should have a &apos;videoCodec&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#withVideoBitrate" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases video methods FfmpegCommand#withVideoBitrate should have a &apos;videoBitrate&apos; alias" time="0.000" classname="should have a &apos;videoBitrate&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#withVideoFilter" timestamp="2025-06-07T21:52:42" tests="3" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases video methods FfmpegCommand#withVideoFilter should have a &apos;withVideoFilters&apos; alias" time="0.000" classname="should have a &apos;withVideoFilters&apos; alias">
    </testcase>
    <testcase name="Method aliases video methods FfmpegCommand#withVideoFilter should have a &apos;videoFilter&apos; alias" time="0.000" classname="should have a &apos;videoFilter&apos; alias">
    </testcase>
    <testcase name="Method aliases video methods FfmpegCommand#withVideoFilter should have a &apos;videoFilters&apos; alias" time="0.000" classname="should have a &apos;videoFilters&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#withOutputFps" timestamp="2025-06-07T21:52:42" tests="11" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.001" failures="0">
    <testcase name="Method aliases video methods FfmpegCommand#withOutputFps should have a &apos;withOutputFPS&apos; alias" time="0.000" classname="should have a &apos;withOutputFPS&apos; alias">
    </testcase>
    <testcase name="Method aliases video methods FfmpegCommand#withOutputFps should have a &apos;withFpsOutput&apos; alias" time="0.000" classname="should have a &apos;withFpsOutput&apos; alias">
    </testcase>
    <testcase name="Method aliases video methods FfmpegCommand#withOutputFps should have a &apos;withFPSOutput&apos; alias" time="0.000" classname="should have a &apos;withFPSOutput&apos; alias">
    </testcase>
    <testcase name="Method aliases video methods FfmpegCommand#withOutputFps should have a &apos;withFps&apos; alias" time="0.000" classname="should have a &apos;withFps&apos; alias">
    </testcase>
    <testcase name="Method aliases video methods FfmpegCommand#withOutputFps should have a &apos;withFPS&apos; alias" time="0.000" classname="should have a &apos;withFPS&apos; alias">
    </testcase>
    <testcase name="Method aliases video methods FfmpegCommand#withOutputFps should have a &apos;outputFPS&apos; alias" time="0.000" classname="should have a &apos;outputFPS&apos; alias">
    </testcase>
    <testcase name="Method aliases video methods FfmpegCommand#withOutputFps should have a &apos;outputFps&apos; alias" time="0.000" classname="should have a &apos;outputFps&apos; alias">
    </testcase>
    <testcase name="Method aliases video methods FfmpegCommand#withOutputFps should have a &apos;fpsOutput&apos; alias" time="0.000" classname="should have a &apos;fpsOutput&apos; alias">
    </testcase>
    <testcase name="Method aliases video methods FfmpegCommand#withOutputFps should have a &apos;FPSOutput&apos; alias" time="0.000" classname="should have a &apos;FPSOutput&apos; alias">
    </testcase>
    <testcase name="Method aliases video methods FfmpegCommand#withOutputFps should have a &apos;fps&apos; alias" time="0.000" classname="should have a &apos;fps&apos; alias">
    </testcase>
    <testcase name="Method aliases video methods FfmpegCommand#withOutputFps should have a &apos;FPS&apos; alias" time="0.000" classname="should have a &apos;FPS&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#takeFrames" timestamp="2025-06-07T21:52:42" tests="2" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases video methods FfmpegCommand#takeFrames should have a &apos;withFrames&apos; alias" time="0.000" classname="should have a &apos;withFrames&apos; alias">
    </testcase>
    <testcase name="Method aliases video methods FfmpegCommand#takeFrames should have a &apos;frames&apos; alias" time="0.000" classname="should have a &apos;frames&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="videosize methods" timestamp="2025-06-07T21:52:42" tests="0" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="FfmpegCommand#keepPixelAspect" timestamp="2025-06-07T21:52:42" tests="3" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases videosize methods FfmpegCommand#keepPixelAspect should have a &apos;keepDisplayAspect&apos; alias" time="0.000" classname="should have a &apos;keepDisplayAspect&apos; alias">
    </testcase>
    <testcase name="Method aliases videosize methods FfmpegCommand#keepPixelAspect should have a &apos;keepDisplayAspectRatio&apos; alias" time="0.000" classname="should have a &apos;keepDisplayAspectRatio&apos; alias">
    </testcase>
    <testcase name="Method aliases videosize methods FfmpegCommand#keepPixelAspect should have a &apos;keepDAR&apos; alias" time="0.000" classname="should have a &apos;keepDAR&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#withSize" timestamp="2025-06-07T21:52:42" tests="2" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases videosize methods FfmpegCommand#withSize should have a &apos;setSize&apos; alias" time="0.000" classname="should have a &apos;setSize&apos; alias">
    </testcase>
    <testcase name="Method aliases videosize methods FfmpegCommand#withSize should have a &apos;size&apos; alias" time="0.000" classname="should have a &apos;size&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#withAspect" timestamp="2025-06-07T21:52:42" tests="5" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases videosize methods FfmpegCommand#withAspect should have a &apos;withAspectRatio&apos; alias" time="0.000" classname="should have a &apos;withAspectRatio&apos; alias">
    </testcase>
    <testcase name="Method aliases videosize methods FfmpegCommand#withAspect should have a &apos;setAspect&apos; alias" time="0.000" classname="should have a &apos;setAspect&apos; alias">
    </testcase>
    <testcase name="Method aliases videosize methods FfmpegCommand#withAspect should have a &apos;setAspectRatio&apos; alias" time="0.000" classname="should have a &apos;setAspectRatio&apos; alias">
    </testcase>
    <testcase name="Method aliases videosize methods FfmpegCommand#withAspect should have a &apos;aspect&apos; alias" time="0.000" classname="should have a &apos;aspect&apos; alias">
    </testcase>
    <testcase name="Method aliases videosize methods FfmpegCommand#withAspect should have a &apos;aspectRatio&apos; alias" time="0.000" classname="should have a &apos;aspectRatio&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#applyAutopadding" timestamp="2025-06-07T21:52:42" tests="9" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.001" failures="0">
    <testcase name="Method aliases videosize methods FfmpegCommand#applyAutopadding should have a &apos;applyAutoPadding&apos; alias" time="0.000" classname="should have a &apos;applyAutoPadding&apos; alias">
    </testcase>
    <testcase name="Method aliases videosize methods FfmpegCommand#applyAutopadding should have a &apos;applyAutopad&apos; alias" time="0.000" classname="should have a &apos;applyAutopad&apos; alias">
    </testcase>
    <testcase name="Method aliases videosize methods FfmpegCommand#applyAutopadding should have a &apos;applyAutoPad&apos; alias" time="0.001" classname="should have a &apos;applyAutoPad&apos; alias">
    </testcase>
    <testcase name="Method aliases videosize methods FfmpegCommand#applyAutopadding should have a &apos;withAutopadding&apos; alias" time="0.000" classname="should have a &apos;withAutopadding&apos; alias">
    </testcase>
    <testcase name="Method aliases videosize methods FfmpegCommand#applyAutopadding should have a &apos;withAutoPadding&apos; alias" time="0.000" classname="should have a &apos;withAutoPadding&apos; alias">
    </testcase>
    <testcase name="Method aliases videosize methods FfmpegCommand#applyAutopadding should have a &apos;withAutopad&apos; alias" time="0.000" classname="should have a &apos;withAutopad&apos; alias">
    </testcase>
    <testcase name="Method aliases videosize methods FfmpegCommand#applyAutopadding should have a &apos;withAutoPad&apos; alias" time="0.000" classname="should have a &apos;withAutoPad&apos; alias">
    </testcase>
    <testcase name="Method aliases videosize methods FfmpegCommand#applyAutopadding should have a &apos;autoPad&apos; alias" time="0.000" classname="should have a &apos;autoPad&apos; alias">
    </testcase>
    <testcase name="Method aliases videosize methods FfmpegCommand#applyAutopadding should have a &apos;autopad&apos; alias" time="0.000" classname="should have a &apos;autopad&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="processing methods" timestamp="2025-06-07T21:52:42" tests="0" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="FfmpegCommand#saveToFile" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases processing methods FfmpegCommand#saveToFile should have a &apos;save&apos; alias" time="0.000" classname="should have a &apos;save&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#writeToStream" timestamp="2025-06-07T21:52:42" tests="2" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases processing methods FfmpegCommand#writeToStream should have a &apos;stream&apos; alias" time="0.000" classname="should have a &apos;stream&apos; alias">
    </testcase>
    <testcase name="Method aliases processing methods FfmpegCommand#writeToStream should have a &apos;pipe&apos; alias" time="0.000" classname="should have a &apos;pipe&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#run" timestamp="2025-06-07T21:52:42" tests="2" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases processing methods FfmpegCommand#run should have a &apos;exec&apos; alias" time="0.000" classname="should have a &apos;exec&apos; alias">
    </testcase>
    <testcase name="Method aliases processing methods FfmpegCommand#run should have a &apos;execute&apos; alias" time="0.000" classname="should have a &apos;execute&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#concat" timestamp="2025-06-07T21:52:42" tests="2" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases processing methods FfmpegCommand#concat should have a &apos;concatenate&apos; alias" time="0.000" classname="should have a &apos;concatenate&apos; alias">
    </testcase>
    <testcase name="Method aliases processing methods FfmpegCommand#concat should have a &apos;mergeToFile&apos; alias" time="0.000" classname="should have a &apos;mergeToFile&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="FfmpegCommand#screenshots" timestamp="2025-06-07T21:52:42" tests="4" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.000" failures="0">
    <testcase name="Method aliases processing methods FfmpegCommand#screenshots should have a &apos;screenshot&apos; alias" time="0.000" classname="should have a &apos;screenshot&apos; alias">
    </testcase>
    <testcase name="Method aliases processing methods FfmpegCommand#screenshots should have a &apos;thumbnails&apos; alias" time="0.000" classname="should have a &apos;thumbnails&apos; alias">
    </testcase>
    <testcase name="Method aliases processing methods FfmpegCommand#screenshots should have a &apos;thumbnail&apos; alias" time="0.000" classname="should have a &apos;thumbnail&apos; alias">
    </testcase>
    <testcase name="Method aliases processing methods FfmpegCommand#screenshots should have a &apos;takeScreenshots&apos; alias" time="0.000" classname="should have a &apos;takeScreenshots&apos; alias">
    </testcase>
  </testsuite>
  <testsuite name="Command aliases" timestamp="2025-06-07T21:52:42" tests="8" file="C:\tools\git-repos\node-fluent-ffmpeg\test\aliases.test.js" time="0.001" failures="1">
    <testcase name="Command aliases &quot;before all&quot; hook for &quot;should correctly expand format alias&quot;" time="0.000" classname="&quot;before all&quot; hook for &quot;should correctly expand format alias&quot;">
      <failure message="helpers is not defined" type="ReferenceError"><![CDATA[ReferenceError: helpers is not defined
    at Context.<anonymous> (test\aliases.test.js:91:5)
    at process.processImmediate (node:internal/timers:491:21)]]></failure>
    </testcase>
  </testsuite>
  <testsuite name="Command" timestamp="2025-06-07T21:52:42" tests="0" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="Constructor" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.001" failures="0">
    <testcase name="Command Constructor should enable calling the constructor without new" time="0.001" classname="should enable calling the constructor without new">
    </testcase>
  </testsuite>
  <testsuite name="usingPreset" timestamp="2025-06-07T21:52:42" tests="5" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.003" failures="0">
    <testcase name="Command usingPreset should properly generate the command for the requested preset" time="0.001" classname="should properly generate the command for the requested preset">
    </testcase>
    <testcase name="Command usingPreset should properly generate the command for the requested preset in custom folder" time="0.001" classname="should properly generate the command for the requested preset in custom folder">
    </testcase>
    <testcase name="Command usingPreset should allow using functions as presets" time="0.000" classname="should allow using functions as presets">
    </testcase>
    <testcase name="Command usingPreset should throw an exception when a preset is not found" time="0.001" classname="should throw an exception when a preset is not found">
    </testcase>
    <testcase name="Command usingPreset should throw an exception when a preset has no load function" time="0.000" classname="should throw an exception when a preset has no load function">
    </testcase>
  </testsuite>
  <testsuite name="withNoVideo" timestamp="2025-06-07T21:52:42" tests="2" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command withNoVideo should apply the skip video argument" time="0.000" classname="should apply the skip video argument">
    </testcase>
    <testcase name="Command withNoVideo should skip any video transformation options" time="0.000" classname="should skip any video transformation options">
    </testcase>
  </testsuite>
  <testsuite name="withNoAudio" timestamp="2025-06-07T21:52:42" tests="2" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.001" failures="0">
    <testcase name="Command withNoAudio should apply the skip audio argument" time="0.001" classname="should apply the skip audio argument">
    </testcase>
    <testcase name="Command withNoAudio should skip any audio transformation options" time="0.000" classname="should skip any audio transformation options">
    </testcase>
  </testsuite>
  <testsuite name="withVideoBitrate" timestamp="2025-06-07T21:52:42" tests="2" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command withVideoBitrate should apply default bitrate argument by default" time="0.000" classname="should apply default bitrate argument by default">
    </testcase>
    <testcase name="Command withVideoBitrate should apply additional bitrate arguments for constant bitrate" time="0.000" classname="should apply additional bitrate arguments for constant bitrate">
    </testcase>
  </testsuite>
  <testsuite name="withMultiFile" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command withMultiFile should allow image2 multi-file input format" time="0.000" classname="should allow image2 multi-file input format">
    </testcase>
  </testsuite>
  <testsuite name="withFps" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command withFps should apply the rate argument" time="0.000" classname="should apply the rate argument">
    </testcase>
  </testsuite>
  <testsuite name="withInputFPS" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command withInputFPS should apply the rate argument" time="0.000" classname="should apply the rate argument">
    </testcase>
  </testsuite>
  <testsuite name="native" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.001" failures="0">
    <testcase name="Command native should apply the native framerate argument" time="0.000" classname="should apply the native framerate argument">
    </testcase>
  </testsuite>
  <testsuite name="addingAdditionalInput" timestamp="2025-06-07T21:52:42" tests="4" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.001" failures="0">
    <testcase name="Command addingAdditionalInput should allow for additional inputs" time="0.000" classname="should allow for additional inputs">
    </testcase>
    <testcase name="Command addingAdditionalInput should fail to add invalid inputs" time="0.000" classname="should fail to add invalid inputs">
    </testcase>
    <testcase name="Command addingAdditionalInput should refuse to add more than 1 input stream" time="0.001" classname="should refuse to add more than 1 input stream">
    </testcase>
    <testcase name="Command addingAdditionalInput should fail on input-related options when no input was added" time="0.000" classname="should fail on input-related options when no input was added">
    </testcase>
  </testsuite>
  <testsuite name="withVideoCodec" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.001" failures="0">
    <testcase name="Command withVideoCodec should apply the video codec argument" time="0.001" classname="should apply the video codec argument">
    </testcase>
  </testsuite>
  <testsuite name="withVideoFilter" timestamp="2025-06-07T21:52:42" tests="3" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command withVideoFilter should apply the video filter argument" time="0.000" classname="should apply the video filter argument">
    </testcase>
    <testcase name="Command withVideoFilter should accept filter arrays" time="0.000" classname="should accept filter arrays">
    </testcase>
    <testcase name="Command withVideoFilter should enable using filter objects" time="0.000" classname="should enable using filter objects">
    </testcase>
  </testsuite>
  <testsuite name="withAudioBitrate" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command withAudioBitrate should apply the audio bitrate argument" time="0.000" classname="should apply the audio bitrate argument">
    </testcase>
  </testsuite>
  <testsuite name="loop" timestamp="2025-06-07T21:52:42" tests="3" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command loop should add the -loop 1 argument" time="0.000" classname="should add the -loop 1 argument">
    </testcase>
    <testcase name="Command loop should add the -loop 1 and a time argument (seconds)" time="0.000" classname="should add the -loop 1 and a time argument (seconds)">
    </testcase>
    <testcase name="Command loop should add the -loop 1 and a time argument (timemark)" time="0.000" classname="should add the -loop 1 and a time argument (timemark)">
    </testcase>
  </testsuite>
  <testsuite name="takeFrames" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command takeFrames should add the -vframes argument" time="0.000" classname="should add the -vframes argument">
    </testcase>
  </testsuite>
  <testsuite name="withAudioCodec" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command withAudioCodec should apply the audio codec argument" time="0.000" classname="should apply the audio codec argument">
    </testcase>
  </testsuite>
  <testsuite name="withAudioFilter" timestamp="2025-06-07T21:52:42" tests="3" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.001" failures="0">
    <testcase name="Command withAudioFilter should apply the audio filter argument" time="0.000" classname="should apply the audio filter argument">
    </testcase>
    <testcase name="Command withAudioFilter should accept filter arrays" time="0.000" classname="should accept filter arrays">
    </testcase>
    <testcase name="Command withAudioFilter should enable using filter objects" time="0.001" classname="should enable using filter objects">
    </testcase>
  </testsuite>
  <testsuite name="withAudioChannels" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command withAudioChannels should apply the audio channels argument" time="0.000" classname="should apply the audio channels argument">
    </testcase>
  </testsuite>
  <testsuite name="withAudioFrequency" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command withAudioFrequency should apply the audio frequency argument" time="0.000" classname="should apply the audio frequency argument">
    </testcase>
  </testsuite>
  <testsuite name="withAudioQuality" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command withAudioQuality should apply the audio quality argument" time="0.000" classname="should apply the audio quality argument">
    </testcase>
  </testsuite>
  <testsuite name="setStartTime" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command setStartTime should apply the start time offset argument" time="0.000" classname="should apply the start time offset argument">
    </testcase>
  </testsuite>
  <testsuite name="setDuration" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command setDuration should apply the record duration argument" time="0.000" classname="should apply the record duration argument">
    </testcase>
  </testsuite>
  <testsuite name="addOption(s)" timestamp="2025-06-07T21:52:42" tests="4" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command addOption(s) should apply a single option" time="0.000" classname="should apply a single option">
    </testcase>
    <testcase name="Command addOption(s) should apply supplied extra options" time="0.000" classname="should apply supplied extra options">
    </testcase>
    <testcase name="Command addOption(s) should apply a single input option" time="0.000" classname="should apply a single input option">
    </testcase>
    <testcase name="Command addOption(s) should apply multiple input options" time="0.000" classname="should apply multiple input options">
    </testcase>
  </testsuite>
  <testsuite name="toFormat" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="0">
    <testcase name="Command toFormat should apply the target format" time="0.000" classname="should apply the target format">
    </testcase>
  </testsuite>
  <testsuite name="Size calculations" timestamp="2025-06-07T21:52:42" tests="13" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.005" failures="6">
    <testcase name="Command Size calculations Should throw an error when an invalid aspect ratio is passed" time="0.000" classname="Should throw an error when an invalid aspect ratio is passed">
    </testcase>
    <testcase name="Command Size calculations Should add scale and setsar filters when keepPixelAspect was called" time="0.000" classname="Should add scale and setsar filters when keepPixelAspect was called">
      <failure message="expected &apos;scale=w=if(gt(sar\\\\,1),iw*sar,iw):h=if(lt(sar\\\\,1),ih/sar,ih)&apos; to be &apos;scale=w=\&apos;if(gt(sar,1),iw*sar,iw)\&apos;:h=\&apos;if(lt(sar,1),ih/sar,ih)\&apos;&apos;" type="AssertionError"><![CDATA[AssertionError: expected 'scale=w=if(gt(sar\\\\,1),iw*sar,iw):h=if(lt(sar\\\\,1),ih/sar,ih)' to be 'scale=w=\'if(gt(sar,1),iw*sar,iw)\':h=\'if(lt(sar,1),ih/sar,ih)\''
    at Assertion.fail (node_modules\should\cjs\should.js:275:17)
    at Assertion.value (node_modules\should\cjs\should.js:356:19)
    at Context.<anonymous> (test\args.test.js:723:25)
    at process.processImmediate (node:internal/timers:491:21)

      + expected - actual

      -scale=w=if(gt(sar\\,1),iw*sar,iw):h=if(lt(sar\\,1),ih/sar,ih)
      +scale=w='if(gt(sar,1),iw*sar,iw)':h='if(lt(sar,1),ih/sar,ih)'
      ]]></failure>
    </testcase>
    <testcase name="Command Size calculations Should throw an error when an invalid size was requested" time="0.000" classname="Should throw an error when an invalid size was requested">
    </testcase>
    <testcase name="Command Size calculations Should not add scale filters when withSize was not called" time="0.000" classname="Should not add scale filters when withSize was not called">
    </testcase>
    <testcase name="Command Size calculations Should add proper scale filter when withSize was called with a percent value" time="0.000" classname="Should add proper scale filter when withSize was called with a percent value">
    </testcase>
    <testcase name="Command Size calculations Should add proper scale filter when withSize was called with a fixed size" time="0.001" classname="Should add proper scale filter when withSize was called with a fixed size">
    </testcase>
    <testcase name="Command Size calculations Should add proper scale filter when withSize was called with a &quot;?&quot; and no aspect ratio is specified" time="0.000" classname="Should add proper scale filter when withSize was called with a &quot;?&quot; and no aspect ratio is specified">
    </testcase>
    <testcase name="Command Size calculations Should add proper scale filter when withSize was called with a &quot;?&quot; and an aspect ratio is specified" time="0.000" classname="Should add proper scale filter when withSize was called with a &quot;?&quot; and an aspect ratio is specified">
    </testcase>
    <testcase name="Command Size calculations Should add scale and pad filters when withSize was called with a &quot;?&quot;, aspect ratio and auto padding are specified" time="0.000" classname="Should add scale and pad filters when withSize was called with a &quot;?&quot;, aspect ratio and auto padding are specified">
      <failure message="expected &apos;scale=w=if(gt(a\\\\,0.5),100,trunc(200*a/2)*2):h=if(lt(a\\\\,0.5),200,trunc(100/a/2)*2)&apos; to be &apos;scale=w=\&apos;if(gt(a,0.5),100,trunc(200*a/2)*2)\&apos;:h=\&apos;if(lt(a,0.5),200,trunc(100/a/2)*2)\&apos;&apos;" type="AssertionError"><![CDATA[AssertionError: expected 'scale=w=if(gt(a\\\\,0.5),100,trunc(200*a/2)*2):h=if(lt(a\\\\,0.5),200,trunc(100/a/2)*2)' to be 'scale=w=\'if(gt(a,0.5),100,trunc(200*a/2)*2)\':h=\'if(lt(a,0.5),200,trunc(100/a/2)*2)\''
    at Assertion.fail (node_modules\should\cjs\should.js:275:17)
    at Assertion.value (node_modules\should\cjs\should.js:356:19)
    at Context.<anonymous> (test\args.test.js:844:25)
    at process.processImmediate (node:internal/timers:491:21)

      + expected - actual

      -scale=w=if(gt(a\\,0.5),100,trunc(200*a/2)*2):h=if(lt(a\\,0.5),200,trunc(100/a/2)*2)
      +scale=w='if(gt(a,0.5),100,trunc(200*a/2)*2)':h='if(lt(a,0.5),200,trunc(100/a/2)*2)'
      ]]></failure>
    </testcase>
    <testcase name="Command Size calculations Should add scale and pad filters when withSize was called with a fixed size and auto padding is specified" time="0.000" classname="Should add scale and pad filters when withSize was called with a fixed size and auto padding is specified">
      <failure message="expected &apos;scale=w=if(gt(a\\\\,0.5),100,trunc(200*a/2)*2):h=if(lt(a\\\\,0.5),200,trunc(100/a/2)*2)&apos; to be &apos;scale=w=\&apos;if(gt(a,0.5),100,trunc(200*a/2)*2)\&apos;:h=\&apos;if(lt(a,0.5),200,trunc(100/a/2)*2)\&apos;&apos;" type="AssertionError"><![CDATA[AssertionError: expected 'scale=w=if(gt(a\\\\,0.5),100,trunc(200*a/2)*2):h=if(lt(a\\\\,0.5),200,trunc(100/a/2)*2)' to be 'scale=w=\'if(gt(a,0.5),100,trunc(200*a/2)*2)\':h=\'if(lt(a,0.5),200,trunc(100/a/2)*2)\''
    at Assertion.fail (node_modules\should\cjs\should.js:275:17)
    at Assertion.value (node_modules\should\cjs\should.js:356:19)
    at Context.<anonymous> (test\args.test.js:865:25)
    at process.processImmediate (node:internal/timers:491:21)

      + expected - actual

      -scale=w=if(gt(a\\,0.5),100,trunc(200*a/2)*2):h=if(lt(a\\,0.5),200,trunc(100/a/2)*2)
      +scale=w='if(gt(a,0.5),100,trunc(200*a/2)*2)':h='if(lt(a,0.5),200,trunc(100/a/2)*2)'
      ]]></failure>
    </testcase>
    <testcase name="Command Size calculations Should round sizes to multiples of 2" time="0.000" classname="Should round sizes to multiples of 2">
      <failure message="expected &apos;scale=w=if(gt(a\\\\,0.504950495049505),102,trunc(202*a/2)*2):h=if(lt(a\\\\,0.504950495049505),202,trunc(102/a/2)*2)&apos; to be &apos;scale=w=\&apos;if(gt(a,0.504950495049505),102,trunc(202*a/2)*2)\&apos;:h=\&apos;if(lt(a,0.504950495049505),202,trunc(102/a/2)*2)\&apos;&apos;" type="AssertionError"><![CDATA[AssertionError: expected 'scale=w=if(gt(a\\\\,0.504950495049505),102,trunc(202*a/2)*2):h=if(lt(a\\\\,0.504950495049505),202,trunc(102/a/2)*2)' to be 'scale=w=\'if(gt(a,0.504950495049505),102,trunc(202*a/2)*2)\':h=\'if(lt(a,0.504950495049505),202,trunc(102/a/2)*2)\''
    at Assertion.fail (node_modules\should\cjs\should.js:275:17)
    at Assertion.value (node_modules\should\cjs\should.js:356:19)
    at Context.<anonymous> (test\args.test.js:910:25)
    at process.processImmediate (node:internal/timers:491:21)

      + expected - actual

      -scale=w=if(gt(a\\,0.504950495049505),102,trunc(202*a/2)*2):h=if(lt(a\\,0.504950495049505),202,trunc(102/a/2)*2)
      +scale=w='if(gt(a,0.504950495049505),102,trunc(202*a/2)*2)':h='if(lt(a,0.504950495049505),202,trunc(102/a/2)*2)'
      ]]></failure>
    </testcase>
    <testcase name="Command Size calculations Should apply autopadding when no boolean argument was passed to applyAutopadding" time="0.000" classname="Should apply autopadding when no boolean argument was passed to applyAutopadding">
      <failure message="expected &apos;pad=w=100:h=200:x=if(gt(a\\\\,0.5),0,(100-iw)/2):y=if(lt(a\\\\,0.5),0,(200-ih)/2):color=white&apos; to be &apos;pad=w=100:h=200:x=\&apos;if(gt(a,0.5),0,(100-iw)/2)\&apos;:y=\&apos;if(lt(a,0.5),0,(200-ih)/2)\&apos;:color=white&apos;" type="AssertionError"><![CDATA[AssertionError: expected 'pad=w=100:h=200:x=if(gt(a\\\\,0.5),0,(100-iw)/2):y=if(lt(a\\\\,0.5),0,(200-ih)/2):color=white' to be 'pad=w=100:h=200:x=\'if(gt(a,0.5),0,(100-iw)/2)\':y=\'if(lt(a,0.5),0,(200-ih)/2)\':color=white'
    at Assertion.fail (node_modules\should\cjs\should.js:275:17)
    at Assertion.value (node_modules\should\cjs\should.js:356:19)
    at Context.<anonymous> (test\args.test.js:935:25)
    at process.processImmediate (node:internal/timers:491:21)

      + expected - actual

      -pad=w=100:h=200:x=if(gt(a\\,0.5),0,(100-iw)/2):y=if(lt(a\\,0.5),0,(200-ih)/2):color=white
      +pad=w=100:h=200:x='if(gt(a,0.5),0,(100-iw)/2)':y='if(lt(a,0.5),0,(200-ih)/2)':color=white
      ]]></failure>
    </testcase>
    <testcase name="Command Size calculations Should default to black padding" time="0.001" classname="Should default to black padding">
      <failure message="expected &apos;pad=w=100:h=200:x=if(gt(a\\\\,0.5),0,(100-iw)/2):y=if(lt(a\\\\,0.5),0,(200-ih)/2):color=black&apos; to be &apos;pad=w=100:h=200:x=\&apos;if(gt(a,0.5),0,(100-iw)/2)\&apos;:y=\&apos;if(lt(a,0.5),0,(200-ih)/2)\&apos;:color=black&apos;" type="AssertionError"><![CDATA[AssertionError: expected 'pad=w=100:h=200:x=if(gt(a\\\\,0.5),0,(100-iw)/2):y=if(lt(a\\\\,0.5),0,(200-ih)/2):color=black' to be 'pad=w=100:h=200:x=\'if(gt(a,0.5),0,(100-iw)/2)\':y=\'if(lt(a,0.5),0,(200-ih)/2)\':color=black'
    at Assertion.fail (node_modules\should\cjs\should.js:275:17)
    at Assertion.value (node_modules\should\cjs\should.js:356:19)
    at Context.<anonymous> (test\args.test.js:945:25)
    at process.processImmediate (node:internal/timers:491:21)

      + expected - actual

      -pad=w=100:h=200:x=if(gt(a\\,0.5),0,(100-iw)/2):y=if(lt(a\\,0.5),0,(200-ih)/2):color=black
      +pad=w=100:h=200:x='if(gt(a,0.5),0,(100-iw)/2)':y='if(lt(a,0.5),0,(200-ih)/2)':color=black
      ]]></failure>
    </testcase>
  </testsuite>
  <testsuite name="complexFilter" timestamp="2025-06-07T21:52:42" tests="9" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.001" failures="3">
    <testcase name="Command complexFilter should generate a complex filter from a single filter" time="0.000" classname="should generate a complex filter from a single filter">
    </testcase>
    <testcase name="Command complexFilter should generate a complex filter from a filter array" time="0.000" classname="should generate a complex filter from a filter array">
    </testcase>
    <testcase name="Command complexFilter should support filter objects" time="0.000" classname="should support filter objects">
    </testcase>
    <testcase name="Command complexFilter should support filter options" time="0.000" classname="should support filter options">
    </testcase>
    <testcase name="Command complexFilter should escape filter options with ambiguous characters" time="0.000" classname="should escape filter options with ambiguous characters">
      <failure message="expected &apos;filter1=optionstring;filter2=op\\\\,t1:op\\\\,t2:op\\\\,t3;filter3=opt1=val\\\\,ue1:opt2=val\\\\,ue2&apos; to be &apos;filter1=optionstring;filter2=\&apos;op,t1\&apos;:\&apos;op,t2\&apos;:\&apos;op,t3\&apos;;filter3=opt1=\&apos;val,ue1\&apos;:opt2=\&apos;val,ue2\&apos;&apos;" type="AssertionError"><![CDATA[AssertionError: expected 'filter1=optionstring;filter2=op\\\\,t1:op\\\\,t2:op\\\\,t3;filter3=opt1=val\\\\,ue1:opt2=val\\\\,ue2' to be 'filter1=optionstring;filter2=\'op,t1\':\'op,t2\':\'op,t3\';filter3=opt1=\'val,ue1\':opt2=\'val,ue2\''
    at Assertion.fail (node_modules\should\cjs\should.js:275:17)
    at Assertion.value (node_modules\should\cjs\should.js:356:19)
    at Context.<anonymous> (test\args.test.js:1012:25)
    at process.processImmediate (node:internal/timers:491:21)

      + expected - actual

      -filter1=optionstring;filter2=op\\,t1:op\\,t2:op\\,t3;filter3=opt1=val\\,ue1:opt2=val\\,ue2
      +filter1=optionstring;filter2='op,t1':'op,t2':'op,t3';filter3=opt1='val,ue1':opt2='val,ue2'
      ]]></failure>
    </testcase>
    <testcase name="Command complexFilter should support filter input streams" time="0.001" classname="should support filter input streams">
      <failure message="expected &apos;[input]filter1;[[input]]filter2;[[input1]][input2]filter3&apos; to be &apos;[input]filter1;[input]filter2;[input1][input2]filter3&apos;" type="AssertionError"><![CDATA[AssertionError: expected '[input]filter1;[[input]]filter2;[[input1]][input2]filter3' to be '[input]filter1;[input]filter2;[input1][input2]filter3'
    at Assertion.fail (node_modules\should\cjs\should.js:275:17)
    at Assertion.value (node_modules\should\cjs\should.js:356:19)
    at Context.<anonymous> (test\args.test.js:1025:25)
    at process.processImmediate (node:internal/timers:491:21)

      + expected - actual

      -[input]filter1;[[input]]filter2;[[input1]][input2]filter3
      +[input]filter1;[input]filter2;[input1][input2]filter3
      ]]></failure>
    </testcase>
    <testcase name="Command complexFilter should support filter output streams" time="0.000" classname="should support filter output streams">
      <failure message="expected &apos;filter1=opt[output];filter2=opt[[output]];filter3=opt[[output1]][output2]&apos; to be &apos;filter1=opt[output];filter2=opt[output];filter3=opt[output1][output2]&apos;" type="AssertionError"><![CDATA[AssertionError: expected 'filter1=opt[output];filter2=opt[[output]];filter3=opt[[output1]][output2]' to be 'filter1=opt[output];filter2=opt[output];filter3=opt[output1][output2]'
    at Assertion.fail (node_modules\should\cjs\should.js:275:17)
    at Assertion.value (node_modules\should\cjs\should.js:356:19)
    at Context.<anonymous> (test\args.test.js:1038:25)
    at process.processImmediate (node:internal/timers:491:21)

      + expected - actual

      -filter1=opt[output];filter2=opt[[output]];filter3=opt[[output1]][output2]
      +filter1=opt[output];filter2=opt[output];filter3=opt[output1][output2]
      ]]></failure>
    </testcase>
    <testcase name="Command complexFilter should support an additional mapping argument" time="0.000" classname="should support an additional mapping argument">
    </testcase>
    <testcase name="Command complexFilter should override any previously set complex filtergraphs" time="0.000" classname="should override any previously set complex filtergraphs">
    </testcase>
  </testsuite>
  <testsuite name="clone" timestamp="2025-06-07T21:52:42" tests="3" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.002" failures="0">
    <testcase name="Command clone should return a new FfmpegCommand instance" time="0.001" classname="should return a new FfmpegCommand instance">
    </testcase>
    <testcase name="Command clone should duplicate FfmpegCommand options at the time of the call" time="0.001" classname="should duplicate FfmpegCommand options at the time of the call">
    </testcase>
    <testcase name="Command clone should have separate argument lists" time="0.000" classname="should have separate argument lists">
    </testcase>
  </testsuite>
  <testsuite name="Command arguments" timestamp="2025-06-07T21:52:42" tests="4" file="C:\tools\git-repos\node-fluent-ffmpeg\test\args.test.js" time="0.000" failures="1">
    <testcase name="Command arguments &quot;before all&quot; hook for &quot;should pass arguments to FfmpegCommand&quot;" time="0.000" classname="&quot;before all&quot; hook for &quot;should pass arguments to FfmpegCommand&quot;">
      <failure message="helpers is not defined" type="ReferenceError"><![CDATA[ReferenceError: helpers is not defined
    at Context.<anonymous> (test\args.test.js:1127:5)
    at process.processImmediate (node:internal/timers:491:21)]]></failure>
    </testcase>
  </testsuite>
  <testsuite name="Capabilities" timestamp="2025-06-07T21:52:42" tests="1" file="C:\tools\git-repos\node-fluent-ffmpeg\test\capabilities.test.js" time="0.000" failures="1">
    <testcase name="Capabilities &quot;before all&quot; hook for &quot;should run feature detection processes in series&quot;" time="0.000" classname="&quot;before all&quot; hook for &quot;should run feature detection processes in series&quot;">
      <failure message="helpers.getCommand is not a function" type="TypeError"><![CDATA[TypeError: helpers.getCommand is not a function
    at Context.<anonymous> (test\capabilities.test.js:18:38)
    at process.processImmediate (node:internal/timers:491:21)]]></failure>
    </testcase>
  </testsuite>
  <testsuite name="Metadata" timestamp="2025-06-07T21:52:42" tests="5" file="C:\tools\git-repos\node-fluent-ffmpeg\test\metadata.test.js" time="0.000" failures="1">
    <testcase name="Metadata &quot;before all&quot; hook for &quot;should report correct metadata for a known file&quot;" time="0.000" classname="&quot;before all&quot; hook for &quot;should report correct metadata for a known file&quot;">
      <failure message="testhelper.getCommand is not a function" type="TypeError"><![CDATA[TypeError: testhelper.getCommand is not a function
    at Context.<anonymous> (test\metadata.test.js:17:44)
    at process.processImmediate (node:internal/timers:491:21)]]></failure>
    </testcase>
  </testsuite>
  <testsuite name="Processor" timestamp="2025-06-07T21:52:42" tests="6" file="C:\tools\git-repos\node-fluent-ffmpeg\test\processor.test.js" time="0.000" failures="1">
    <testcase name="Processor &quot;before all&quot; hook for &quot;should report codec data through &apos;codecData&apos; event&quot;" time="0.000" classname="&quot;before all&quot; hook for &quot;should report codec data through &apos;codecData&apos; event&quot;">
      <failure message="helpers.getCommand is not a function" type="TypeError"><![CDATA[TypeError: helpers.getCommand is not a function
    at Context.<anonymous> (test\processor.test.js:60:38)
    at process.processImmediate (node:internal/timers:491:21)]]></failure>
    </testcase>
  </testsuite>
  <testsuite name="Utilities" timestamp="2025-06-07T21:52:42" tests="0" file="C:\tools\git-repos\node-fluent-ffmpeg\test\utils.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="Argument list helper" timestamp="2025-06-07T21:52:42" tests="5" file="C:\tools\git-repos\node-fluent-ffmpeg\test\utils.test.js" time="0.001" failures="0">
    <testcase name="Utilities Argument list helper Should add arguments to the list" time="0.000" classname="Should add arguments to the list">
    </testcase>
    <testcase name="Utilities Argument list helper Should return the argument list" time="0.000" classname="Should return the argument list">
    </testcase>
    <testcase name="Utilities Argument list helper Should clear the argument list" time="0.000" classname="Should clear the argument list">
    </testcase>
    <testcase name="Utilities Argument list helper Should retrieve arguments from the list" time="0.000" classname="Should retrieve arguments from the list">
    </testcase>
    <testcase name="Utilities Argument list helper Should remove arguments from the list" time="0.000" classname="Should remove arguments from the list">
    </testcase>
  </testsuite>
  <testsuite name="timemarkToSeconds" timestamp="2025-06-07T21:52:42" tests="4" file="C:\tools\git-repos\node-fluent-ffmpeg\test\utils.test.js" time="0.000" failures="0">
    <testcase name="Utilities timemarkToSeconds should correctly convert a simple timestamp" time="0.000" classname="should correctly convert a simple timestamp">
    </testcase>
    <testcase name="Utilities timemarkToSeconds should correctly convert a complex timestamp" time="0.000" classname="should correctly convert a complex timestamp">
    </testcase>
    <testcase name="Utilities timemarkToSeconds should correclty convert a simple float string timestamp" time="0.000" classname="should correclty convert a simple float string timestamp">
    </testcase>
    <testcase name="Utilities timemarkToSeconds should correclty convert a simple float timestamp" time="0.000" classname="should correclty convert a simple float timestamp">
    </testcase>
  </testsuite>
  <testsuite name="Lines ring buffer" timestamp="2025-06-07T21:52:42" tests="6" file="C:\tools\git-repos\node-fluent-ffmpeg\test\utils.test.js" time="0.001" failures="3">
    <testcase name="Utilities Lines ring buffer should append lines" time="0.000" classname="should append lines">
    </testcase>
    <testcase name="Utilities Lines ring buffer should append partial lines" time="0.000" classname="should append partial lines">
    </testcase>
    <testcase name="Utilities Lines ring buffer should call line callbacks" time="0.000" classname="should call line callbacks">
      <failure message="expected Array [] to have property length of 2 (got 0)" type="AssertionError"><![CDATA[AssertionError: expected Array [] to have property length of 2 (got 0)
    at Assertion.fail (node_modules\should\cjs\should.js:275:17)
    at Assertion.value (node_modules\should\cjs\should.js:356:19)
    at Context.<anonymous> (test\utils.test.js:150:25)
    at process.processImmediate (node:internal/timers:491:21)]]></failure>
    </testcase>
    <testcase name="Utilities Lines ring buffer should close correctly" time="0.000" classname="should close correctly">
      <failure message="expected Array [] to have property length of 2 (got 0)" type="AssertionError"><![CDATA[AssertionError: expected Array [] to have property length of 2 (got 0)
    at Assertion.fail (node_modules\should\cjs\should.js:275:17)
    at Assertion.value (node_modules\should\cjs\should.js:356:19)
    at Context.<anonymous> (test\utils.test.js:178:25)
    at process.processImmediate (node:internal/timers:491:21)]]></failure>
    </testcase>
    <testcase name="Utilities Lines ring buffer should limit lines" time="0.000" classname="should limit lines">
      <failure message="expected &apos;foo\\nbar\\nbaz&apos; to be &apos;bar\\nbaz&apos;" type="AssertionError"><![CDATA[AssertionError: expected 'foo\\nbar\\nbaz' to be 'bar\\nbaz'
    at Assertion.fail (node_modules\should\cjs\should.js:275:17)
    at Assertion.value (node_modules\should\cjs\should.js:356:19)
    at Context.<anonymous> (test\utils.test.js:194:25)
    at process.processImmediate (node:internal/timers:491:21)

      + expected - actual

      -foo\nbar\nbaz
      +bar\nbaz
      ]]></failure>
    </testcase>
    <testcase name="Utilities Lines ring buffer should allow unlimited lines" time="0.000" classname="should allow unlimited lines">
    </testcase>
  </testsuite>
</testsuites>